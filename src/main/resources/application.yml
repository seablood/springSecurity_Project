spring:
  profiles:
    active: dev
    group:
      dev:
        -oauth2

---

spring:
  config:
    activate:
      on-profile: test

---

spring:
  config:
    activate:
      on-profile: dev

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

    defer-datasource-initialization: true

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa

  h2:
    console:
      enabled: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${SPRING_OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${SPRING_OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          facebook:
            client-id: ${SPRING_OAUTH2_FACEBOOK_CLIENT_ID}
            client-secret: ${SPRING_OAUTH2_FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile

          naver:
            client-id: ${SPRING_OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${SPRING_OAUTH2_NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴
